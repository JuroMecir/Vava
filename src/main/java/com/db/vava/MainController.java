package com.db.vava;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/character") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ClassRepository classRepository;
    @Autowired
    private SubclassRepository subclassRepository;
    @Autowired
    private RaceRepository raceRepository;
    @Autowired
    private BackgroundRepository backgroundRepository;

    /*@PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }*/

    @GetMapping(path="/classes")
    @CrossOrigin(origins = "*")
    public @ResponseBody Iterable<Class> getAllClasses() {
        // This returns a JSON or XML with the users
        return classRepository.findAll();
    }

    @GetMapping(path="/subclasses")
    @CrossOrigin(origins = "*")
    public @ResponseBody Iterable<Subclass> getSubclasses(@RequestParam Integer class_id) {
        // This returns a JSON or XML with the users
        //return subclassRepository.findAll();
        return subclassRepository.findAllByClassId(class_id);
    }

    @GetMapping(path="/backgrounds")
    @CrossOrigin(origins = "*")
    public @ResponseBody Iterable<Background> getAllBackgrounds() {
        // This returns a JSON or XML with the users
        return backgroundRepository.findAll();
    }

    @GetMapping(path="/races")
    @CrossOrigin(origins = "*")
    public @ResponseBody Iterable<Race> getAllRaces() {
        // This returns a JSON or XML with the users
        return raceRepository.findAll();
    }
}